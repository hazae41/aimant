{"version":3,"file":"record.cjs","sources":["../../../../../src/mods/binary/record/record.ts"],"sourcesContent":["import { Binary } from \"libs/binary.js\"\nimport { Writable } from \"mods/binary/writable.js\"\n\nexport interface IRecord extends Writable {\n  type: number\n}\n\nexport class RecordHeader {\n  constructor(\n    readonly type: number,\n    readonly version: number,\n    readonly length: number\n  ) { }\n\n  size() {\n    return 1 + 2 + 2\n  }\n\n  write(binary: Binary) {\n    binary.writeUint8(this.type)\n    binary.writeUint16(this.version)\n    binary.writeUint16(this.length)\n  }\n\n  static read(binary: Binary) {\n    const type = binary.readUint8()\n    const version = binary.readUint16()\n    const length = binary.readUint16()\n\n    return new this(type, version, length)\n  }\n\n  record(fragment: Writable) {\n    return new Record(\n      this.type,\n      this.version,\n      fragment)\n  }\n}\n\nexport class Record {\n  readonly class = Record\n\n  static types = {\n    invalid: 0,\n    change_cipher_spec: 20,\n    alert: 21,\n    handshake: 22,\n    application_data: 23\n  }\n\n  constructor(\n    readonly type: number,\n    readonly version: number,\n    readonly fragment: Writable\n  ) { }\n\n  static from(record: IRecord, version: number) {\n    return new this(record.type, version, record)\n  }\n\n  size() {\n    return this.header().size() + this.fragment.size()\n  }\n\n  write(binary: Binary) {\n    this.header().write(binary)\n    this.fragment.write(binary)\n  }\n\n  header() {\n    return new RecordHeader(\n      this.type,\n      this.version,\n      this.fragment.size())\n  }\n\n  export() {\n    const binary = Binary.allocUnsafe(this.size())\n\n    this.write(binary)\n\n    return binary\n  }\n}"],"names":["binary","Binary"],"mappings":";;;;MAOa,YAAY,CAAA;AACvB,IAAA,WAAA,CACW,IAAY,EACZ,OAAe,EACf,MAAc,EAAA;QAFd,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAQ;QACZ,IAAO,CAAA,OAAA,GAAP,OAAO,CAAQ;QACf,IAAM,CAAA,MAAA,GAAN,MAAM,CAAQ;KACpB;IAEL,IAAI,GAAA;AACF,QAAA,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;KACjB;AAED,IAAA,KAAK,CAAC,MAAc,EAAA;AAClB,QAAA,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;AAC5B,QAAA,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;AAChC,QAAA,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;KAChC;IAED,OAAO,IAAI,CAAC,MAAc,EAAA;AACxB,QAAA,MAAM,IAAI,GAAG,MAAM,CAAC,SAAS,EAAE,CAAA;AAC/B,QAAA,MAAM,OAAO,GAAG,MAAM,CAAC,UAAU,EAAE,CAAA;AACnC,QAAA,MAAM,MAAM,GAAG,MAAM,CAAC,UAAU,EAAE,CAAA;QAElC,OAAO,IAAI,IAAI,CAAC,IAAI,EAAE,OAAO,EAAE,MAAM,CAAC,CAAA;KACvC;AAED,IAAA,MAAM,CAAC,QAAkB,EAAA;AACvB,QAAA,OAAO,IAAI,MAAM,CACf,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,OAAO,EACZ,QAAQ,CAAC,CAAA;KACZ;AACF,CAAA;MAEY,MAAM,CAAA;AAWjB,IAAA,WAAA,CACW,IAAY,EACZ,OAAe,EACf,QAAkB,EAAA;QAFlB,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAQ;QACZ,IAAO,CAAA,OAAA,GAAP,OAAO,CAAQ;QACf,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAU;QAbpB,IAAK,CAAA,KAAA,GAAG,MAAM,CAAA;KAclB;AAEL,IAAA,OAAO,IAAI,CAAC,MAAe,EAAE,OAAe,EAAA;QAC1C,OAAO,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,OAAO,EAAE,MAAM,CAAC,CAAA;KAC9C;IAED,IAAI,GAAA;AACF,QAAA,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAA;KACnD;AAED,IAAA,KAAK,CAAC,MAAc,EAAA;QAClB,IAAI,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,CAAA;AAC3B,QAAA,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAA;KAC5B;IAED,MAAM,GAAA;AACJ,QAAA,OAAO,IAAI,YAAY,CACrB,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAA;KACxB;IAED,MAAM,GAAA;QACJ,MAAMA,QAAM,GAAGC,aAAM,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAA;AAE9C,QAAA,IAAI,CAAC,KAAK,CAACD,QAAM,CAAC,CAAA;AAElB,QAAA,OAAOA,QAAM,CAAA;KACd;;AAxCM,MAAA,CAAA,KAAK,GAAG;AACb,IAAA,OAAO,EAAE,CAAC;AACV,IAAA,kBAAkB,EAAE,EAAE;AACtB,IAAA,KAAK,EAAE,EAAE;AACT,IAAA,SAAS,EAAE,EAAE;AACb,IAAA,gBAAgB,EAAE,EAAE;CACrB;;;;;"}