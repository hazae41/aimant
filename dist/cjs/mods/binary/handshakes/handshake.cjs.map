{"version":3,"file":"handshake.cjs","sources":["../../../../../src/mods/binary/handshakes/handshake.ts"],"sourcesContent":["import { Binary } from \"libs/binary.js\"\nimport { ClientHello } from \"mods/binary/handshakes/client_hello/handshake.js\"\n\nexport type Handshakes =\n  | ClientHello\n\nexport class Handshake {\n  readonly class = Handshake\n\n  static types = {\n    client_hello: 1,\n    server_hello: 2\n  }\n\n  constructor(\n    readonly handshake: Handshakes\n  ) { }\n\n  size() {\n    return 1 + 3 + this.handshake.size()\n  }\n\n  write(binary: Binary) {\n    binary.writeUint8(this.handshake.type)\n    binary.writeUint24(this.handshake.size())\n    this.handshake.write(binary)\n  }\n\n  export() {\n    const binary = Binary.allocUnsafe(this.size())\n\n    this.write(binary)\n\n    return binary\n  }\n}"],"names":["binary","Binary"],"mappings":";;;;MAMa,SAAS,CAAA;AAQpB,IAAA,WAAA,CACW,SAAqB,EAAA;QAArB,IAAS,CAAA,SAAA,GAAT,SAAS,CAAY;QARvB,IAAK,CAAA,KAAA,GAAG,SAAS,CAAA;KASrB;IAEL,IAAI,GAAA;QACF,OAAO,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAA;KACrC;AAED,IAAA,KAAK,CAAC,MAAc,EAAA;QAClB,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAA;QACtC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,CAAA;AACzC,QAAA,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,CAAA;KAC7B;IAED,MAAM,GAAA;QACJ,MAAMA,QAAM,GAAGC,aAAM,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAA;AAE9C,QAAA,IAAI,CAAC,KAAK,CAACD,QAAM,CAAC,CAAA;AAElB,QAAA,OAAOA,QAAM,CAAA;KACd;;AAzBM,SAAA,CAAA,KAAK,GAAG;AACb,IAAA,YAAY,EAAE,CAAC;AACf,IAAA,YAAY,EAAE,CAAC;CAChB;;;;"}