{"version":3,"file":"handshake.cjs","sources":["../../../../../../src/mods/binary/handshakes/client_hello/handshake.ts"],"sourcesContent":["import { Binary } from \"libs/binary.js\"\nimport { generateRandom } from \"libs/random.js\"\nimport { ClientSupportedVersions } from \"mods/binary/extensions/supported_versions/extension.js\"\nimport { Handshake } from \"mods/binary/handshakes/handshake.js\"\nimport { Number16, Number8 } from \"mods/binary/number.js\"\nimport { ArrayVector, Vector, Vector16, Vector8 } from \"mods/binary/vector.js\"\n\nexport class ClientHello {\n  readonly class = ClientHello\n\n  static type = Handshake.types.client_hello\n\n  constructor(\n    readonly legacy_version: number,\n    readonly random: Buffer,\n    readonly legacy_session_id: Vector<Number8>,\n    readonly cipher_suites: Vector<Number16>,\n    readonly legacy_compression_methods: Vector<Number8>,\n    readonly extensions?: Vector<Number16>\n  ) { }\n\n  get type() {\n    return this.class.type\n  }\n\n  static default2(ciphers: number[]) {\n    const legacy_version = 0x0303\n    const random = generateRandom(32)\n\n    const legacy_session_id = new ArrayVector<Number8>([], Number8)\n    const cipher_suites = new Vector16<Number16>(ciphers, Number16)\n    const legacy_compression_methods = new Vector8<Number8>([0], Number8)\n\n    return new this(legacy_version, random, legacy_session_id, cipher_suites, legacy_compression_methods)\n  }\n\n  static default3(ciphers: number[]) {\n    const legacy_version = 0x0303\n    const random = generateRandom(32)\n\n    const legacy_session_id = new ArrayVector<Number8>([], Number8)\n    const cipher_suites = new Vector16<Number16>(ciphers, Number16)\n    const legacy_compression_methods = new Vector8<Number8>([0], Number8)\n    const extensions = new ArrayVector<Number16>([ClientSupportedVersions.default3().extension()], Number16)\n\n    return new this(legacy_version, random, legacy_session_id, cipher_suites, legacy_compression_methods, extensions)\n  }\n\n  size() {\n    return 0\n      + 2\n      + this.random.length\n      + this.legacy_session_id.size()\n      + this.cipher_suites.size()\n      + this.legacy_compression_methods.size()\n      + (this.extensions?.size() ?? 0)\n  }\n\n  write(binary: Binary) {\n    binary.writeUint16(this.legacy_version)\n    binary.write(this.random)\n    this.legacy_session_id.write(binary)\n    this.cipher_suites.write(binary)\n    this.legacy_compression_methods.write(binary)\n    this.extensions?.write(binary)\n  }\n\n  handshake() {\n    return new Handshake(this)\n  }\n}"],"names":["random","generateRandom","ArrayVector","Number8","Vector16","Number16","Vector8","ClientSupportedVersions","Handshake"],"mappings":"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"}