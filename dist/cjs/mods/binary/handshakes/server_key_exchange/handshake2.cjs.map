{"version":3,"file":"handshake2.cjs","sources":["../../../../../../src/mods/binary/handshakes/server_key_exchange/handshake2.ts"],"sourcesContent":["import { Binary } from \"libs/binary.js\"\nimport { Handshake } from \"mods/binary/handshakes/handshake.js\"\nimport { Number16 } from \"mods/binary/number.js\"\nimport { DigitallySigned } from \"mods/binary/signature.js\"\nimport { BufferVector, Vector } from \"mods/binary/vector.js\"\n\nexport class ServerDHParams {\n  readonly class = ServerDHParams\n\n  constructor(\n    readonly dh_p: Vector<Number16>,\n    readonly dh_g: Vector<Number16>,\n    readonly dh_Ys: Vector<Number16>\n  ) { }\n\n  static read(binary: Binary) {\n    const dh_p = BufferVector<Number16>(Number16).read(binary)\n    const dh_g = BufferVector<Number16>(Number16).read(binary)\n    const dh_Ys = BufferVector<Number16>(Number16).read(binary)\n\n    return new this(dh_p, dh_g, dh_Ys)\n  }\n}\n\nexport class ServerKeyExchange2Anonymous {\n  readonly class = ServerKeyExchange2Anonymous\n\n  static type = Handshake.types.server_key_exchange\n\n  constructor(\n    readonly params: ServerDHParams\n  ) { }\n\n  static read(binary: Binary, length: number) {\n    const start = binary.offset\n\n    const params = ServerDHParams.read(binary)\n\n    if (binary.offset - start !== length)\n      throw new Error(`Invalid ${this.name} length`)\n\n    return new this(params)\n  }\n}\n\nexport class ServerKeyExchange2Ephemeral {\n  readonly class = ServerKeyExchange2Ephemeral\n\n  static type = Handshake.types.server_key_exchange\n\n  constructor(\n    readonly params: ServerDHParams,\n    readonly signed_params: DigitallySigned\n  ) { }\n\n  static read(binary: Binary, length: number) {\n    const start = binary.offset\n\n    const params = ServerDHParams.read(binary)\n    const signed_params = DigitallySigned.read(binary)\n\n    if (binary.offset - start !== length)\n      throw new Error(`Invalid ${this.name} length`)\n\n    return new this(params, signed_params)\n  }\n}\n\nexport class ServerKeyExchange2 {\n  readonly class = ServerKeyExchange2\n\n  static type = Handshake.types.server_key_exchange\n\n  constructor() { }\n\n  static read(binary: Binary, length: number) {\n    const start = binary.offset\n\n    /**\n     * Nothing to read\n     */\n\n    if (binary.offset - start !== length)\n      throw new Error(`Invalid ${this.name} length`)\n\n    return new this()\n  }\n}"],"names":["BufferVector","Number16","Handshake","DigitallySigned"],"mappings":"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"}