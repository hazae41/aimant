{"version":3,"file":"tls.cjs","sources":["../../../src/mods/tls.ts"],"sourcesContent":["import { Binary } from \"libs/binary.js\"\nimport { Alert } from \"mods/binary/alerts/alert.js\"\nimport { Certificate2 } from \"mods/binary/handshakes/certificate/handshake2.js\"\nimport { CertificateRequest2 } from \"mods/binary/handshakes/certificate_request/handshake2.js\"\nimport { ClientHello2 } from \"mods/binary/handshakes/client_hello/handshake2.js\"\nimport { Handshake, HandshakeHeader } from \"mods/binary/handshakes/handshake.js\"\nimport { ServerHello2 } from \"mods/binary/handshakes/server_hello/handshake2.js\"\nimport { ServerHelloDone2 } from \"mods/binary/handshakes/server_hello_done/handshake2.js\"\nimport { ServerKeyExchange2, ServerKeyExchange2Anonymous, ServerKeyExchange2Ephemeral } from \"mods/binary/handshakes/server_key_exchange/handshake2.js\"\nimport { RecordHeader } from \"mods/binary/record/record.js\"\nimport { CipherSuite } from \"mods/ciphers/cipher.js\"\nimport { Transport } from \"mods/transports/transport.js\"\n\nexport type State =\n  | NoneState\n  | CipheredState\n\nexport interface NoneState {\n  type: \"none\"\n}\n\nexport interface CipheredState {\n  type: \"ciphered\"\n  version: number\n  cipher: CipherSuite\n}\n\nexport class Tls {\n  private state: State = { type: \"none\" }\n\n  readonly streams = new TransformStream<Buffer, Buffer>()\n\n  private buffer = Buffer.allocUnsafe(4 * 4096)\n  private wbinary = new Binary(this.buffer)\n  private rbinary = new Binary(this.buffer)\n\n  constructor(\n    readonly transport: Transport,\n    readonly ciphers: CipherSuite[]\n  ) {\n    this.tryRead()\n\n    const onMessage = this.onMessage.bind(this)\n\n    transport.addEventListener(\"message\", onMessage, { passive: true })\n\n    new FinalizationRegistry(() => {\n      transport.removeEventListener(\"message\", onMessage)\n    }).register(this, undefined)\n  }\n\n  async handshake() {\n    const hello = ClientHello2\n      .default(this.ciphers)\n      .handshake()\n      .record(0x0301)\n      .export()\n    await this.transport.send(hello.buffer)\n  }\n\n  private async onMessage(event: Event) {\n    const message = event as MessageEvent<Buffer>\n\n    const writer = this.streams.writable.getWriter()\n    writer.write(message.data).catch(console.warn)\n    writer.releaseLock()\n  }\n\n  private async tryRead() {\n    const reader = this.streams.readable.getReader()\n\n    try {\n      await this.read(reader)\n    } finally {\n      reader.releaseLock()\n    }\n  }\n\n  private async read(reader: ReadableStreamDefaultReader<Buffer>) {\n    while (true) {\n      const { done, value } = await reader.read()\n\n      if (done) break\n\n      this.wbinary.write(value)\n      await this.onRead()\n    }\n  }\n\n  private async onRead() {\n    this.rbinary.buffer = this.buffer.subarray(0, this.wbinary.offset)\n\n    while (this.rbinary.remaining) {\n      try {\n        const header = RecordHeader.tryRead(this.rbinary)\n\n        if (!header) break\n\n        await this.onRecord(this.rbinary, header)\n      } catch (e: unknown) {\n        console.error(e)\n      }\n    }\n\n    if (!this.rbinary.offset)\n      return\n\n    if (this.rbinary.offset === this.wbinary.offset) {\n      this.rbinary.offset = 0\n      this.wbinary.offset = 0\n      return\n    }\n\n    if (this.rbinary.remaining && this.wbinary.remaining < 4096) {\n      console.debug(`Reallocating buffer`)\n\n      const remaining = this.buffer.subarray(this.rbinary.offset, this.wbinary.offset)\n\n      this.rbinary.offset = 0\n      this.wbinary.offset = 0\n\n      this.buffer = Buffer.allocUnsafe(4 * 4096)\n      this.rbinary.buffer = this.buffer\n      this.wbinary.buffer = this.buffer\n\n      this.wbinary.write(remaining)\n      return\n    }\n  }\n\n  private async onRecord(binary: Binary, record: RecordHeader) {\n    if (record.type === Alert.type)\n      return this.onAlert(binary, record.length)\n    if (record.type === Handshake.type)\n      return this.onHandshake(binary, record.length)\n\n    binary.offset += record.length\n\n    console.warn(record)\n  }\n\n  private async onAlert(binary: Binary, length: number) {\n    const alert = Alert.read(binary, length)\n\n    console.log(alert)\n  }\n\n  private async onHandshake(binary: Binary, length: number) {\n    const handshake = HandshakeHeader.read(binary, length)\n\n    if (handshake.type === ServerHello2.type)\n      return this.onServerHello(binary, handshake.length)\n    if (handshake.type === Certificate2.type)\n      return this.onCertificate(binary, handshake.length)\n    if (handshake.type === ServerHelloDone2.type)\n      return this.onServerHelloDone(binary, handshake.length)\n    if (handshake.type === ServerKeyExchange2.type)\n      return this.onServerKeyExchange(binary, handshake.length)\n    if (handshake.type === CertificateRequest2.type)\n      return this.onCertificateRequest(binary, handshake.length)\n\n    binary.offset += handshake.length\n\n    console.warn(handshake)\n  }\n\n  private async onServerHello(binary: Binary, length: number) {\n    const hello = ServerHello2.read(binary, length)\n\n    console.log(hello)\n\n    const version = hello.server_version\n\n    if (version !== 0x0303)\n      throw new Error(`Unsupported ${version} version`)\n\n    const cipher = this.ciphers.find(it => it.id === hello.cipher_suite)\n\n    if (cipher === undefined)\n      throw new Error(`Unsupported ${hello.cipher_suite} cipher suite`)\n\n    this.state = { type: \"ciphered\", version, cipher }\n  }\n\n  private async onCertificate(binary: Binary, length: number) {\n    const hello = Certificate2.read(binary, length)\n\n    console.log(hello)\n  }\n\n  private async onServerKeyExchange(binary: Binary, length: number) {\n    if (this.state.type !== \"ciphered\")\n      throw new Error(`Invalid state for onServerKeyExchange`)\n\n    const hello = (() => {\n      if (this.state.cipher.anonymous)\n        return ServerKeyExchange2Anonymous\n      if (this.state.cipher.ephemeral)\n        return ServerKeyExchange2Ephemeral\n      return ServerKeyExchange2\n    })().read(binary, length)\n\n    console.log(hello)\n  }\n\n  private async onCertificateRequest(binary: Binary, length: number) {\n    const hello = CertificateRequest2.read(binary, length)\n\n    console.log(hello)\n  }\n\n  private async onServerHelloDone(binary: Binary, length: number) {\n    const hello = ServerHelloDone2.read(binary, length)\n\n    console.log(hello)\n  }\n}"],"names":["Binary","ClientHello2","RecordHeader","Alert","Handshake","alert","handshake","HandshakeHeader","ServerHello2","Certificate2","ServerHelloDone2","ServerKeyExchange2","CertificateRequest2","ServerKeyExchange2Anonymous","ServerKeyExchange2Ephemeral"],"mappings":";;;;;;;;;;;;;;MA2Ba,GAAG,CAAA;IASd,WACW,CAAA,SAAoB,EACpB,OAAsB,EAAA;QADtB,IAAS,CAAA,SAAA,GAAT,SAAS,CAAW;QACpB,IAAO,CAAA,OAAA,GAAP,OAAO,CAAe;AAVzB,QAAA,IAAA,CAAA,KAAK,GAAU,EAAE,IAAI,EAAE,MAAM,EAAE,CAAA;AAE9B,QAAA,IAAA,CAAA,OAAO,GAAG,IAAI,eAAe,EAAkB,CAAA;QAEhD,IAAM,CAAA,MAAA,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC,GAAG,IAAI,CAAC,CAAA;QACrC,IAAO,CAAA,OAAA,GAAG,IAAIA,aAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;QACjC,IAAO,CAAA,OAAA,GAAG,IAAIA,aAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;QAMvC,IAAI,CAAC,OAAO,EAAE,CAAA;QAEd,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;AAE3C,QAAA,SAAS,CAAC,gBAAgB,CAAC,SAAS,EAAE,SAAS,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAA;QAEnE,IAAI,oBAAoB,CAAC,MAAK;AAC5B,YAAA,SAAS,CAAC,mBAAmB,CAAC,SAAS,EAAE,SAAS,CAAC,CAAA;SACpD,CAAC,CAAC,QAAQ,CAAC,IAAI,EAAE,SAAS,CAAC,CAAA;KAC7B;IAEK,SAAS,GAAA;;YACb,MAAM,KAAK,GAAGC,uBAAY;AACvB,iBAAA,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC;AACrB,iBAAA,SAAS,EAAE;iBACX,MAAM,CAAC,MAAM,CAAC;AACd,iBAAA,MAAM,EAAE,CAAA;YACX,MAAM,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAA;SACxC,CAAA,CAAA;AAAA,KAAA;AAEa,IAAA,SAAS,CAAC,KAAY,EAAA;;YAClC,MAAM,OAAO,GAAG,KAA6B,CAAA;YAE7C,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAA;AAChD,YAAA,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA;YAC9C,MAAM,CAAC,WAAW,EAAE,CAAA;SACrB,CAAA,CAAA;AAAA,KAAA;IAEa,OAAO,GAAA;;YACnB,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAA;YAEhD,IAAI;AACF,gBAAA,MAAM,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;AACxB,aAAA;AAAS,oBAAA;gBACR,MAAM,CAAC,WAAW,EAAE,CAAA;AACrB,aAAA;SACF,CAAA,CAAA;AAAA,KAAA;AAEa,IAAA,IAAI,CAAC,MAA2C,EAAA;;AAC5D,YAAA,OAAO,IAAI,EAAE;gBACX,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,MAAM,CAAC,IAAI,EAAE,CAAA;AAE3C,gBAAA,IAAI,IAAI;oBAAE,MAAK;AAEf,gBAAA,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;AACzB,gBAAA,MAAM,IAAI,CAAC,MAAM,EAAE,CAAA;AACpB,aAAA;SACF,CAAA,CAAA;AAAA,KAAA;IAEa,MAAM,GAAA;;AAClB,YAAA,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAA;AAElE,YAAA,OAAO,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE;gBAC7B,IAAI;oBACF,MAAM,MAAM,GAAGC,mBAAY,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;AAEjD,oBAAA,IAAI,CAAC,MAAM;wBAAE,MAAK;oBAElB,MAAM,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,CAAA;AAC1C,iBAAA;AAAC,gBAAA,OAAO,CAAU,EAAE;AACnB,oBAAA,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;AACjB,iBAAA;AACF,aAAA;AAED,YAAA,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM;gBACtB,OAAM;YAER,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,KAAK,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;AAC/C,gBAAA,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAA;AACvB,gBAAA,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAA;gBACvB,OAAM;AACP,aAAA;AAED,YAAA,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,IAAI,EAAE;AAC3D,gBAAA,OAAO,CAAC,KAAK,CAAC,CAAA,mBAAA,CAAqB,CAAC,CAAA;gBAEpC,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAA;AAEhF,gBAAA,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAA;AACvB,gBAAA,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAA;gBAEvB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC,GAAG,IAAI,CAAC,CAAA;gBAC1C,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAA;gBACjC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAA;AAEjC,gBAAA,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,SAAS,CAAC,CAAA;gBAC7B,OAAM;AACP,aAAA;SACF,CAAA,CAAA;AAAA,KAAA;IAEa,QAAQ,CAAC,MAAc,EAAE,MAAoB,EAAA;;AACzD,YAAA,IAAI,MAAM,CAAC,IAAI,KAAKC,WAAK,CAAC,IAAI;gBAC5B,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,CAAA;AAC5C,YAAA,IAAI,MAAM,CAAC,IAAI,KAAKC,mBAAS,CAAC,IAAI;gBAChC,OAAO,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,CAAA;AAEhD,YAAA,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,CAAA;AAE9B,YAAA,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;SACrB,CAAA,CAAA;AAAA,KAAA;IAEa,OAAO,CAAC,MAAc,EAAE,MAAc,EAAA;;YAClD,MAAMC,OAAK,GAAGF,WAAK,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;AAExC,YAAA,OAAO,CAAC,GAAG,CAACE,OAAK,CAAC,CAAA;SACnB,CAAA,CAAA;AAAA,KAAA;IAEa,WAAW,CAAC,MAAc,EAAE,MAAc,EAAA;;YACtD,MAAMC,WAAS,GAAGC,yBAAe,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;AAEtD,YAAA,IAAID,WAAS,CAAC,IAAI,KAAKE,yBAAY,CAAC,IAAI;gBACtC,OAAO,IAAI,CAAC,aAAa,CAAC,MAAM,EAAEF,WAAS,CAAC,MAAM,CAAC,CAAA;AACrD,YAAA,IAAIA,WAAS,CAAC,IAAI,KAAKG,yBAAY,CAAC,IAAI;gBACtC,OAAO,IAAI,CAAC,aAAa,CAAC,MAAM,EAAEH,WAAS,CAAC,MAAM,CAAC,CAAA;AACrD,YAAA,IAAIA,WAAS,CAAC,IAAI,KAAKI,6BAAgB,CAAC,IAAI;gBAC1C,OAAO,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAEJ,WAAS,CAAC,MAAM,CAAC,CAAA;AACzD,YAAA,IAAIA,WAAS,CAAC,IAAI,KAAKK,+BAAkB,CAAC,IAAI;gBAC5C,OAAO,IAAI,CAAC,mBAAmB,CAAC,MAAM,EAAEL,WAAS,CAAC,MAAM,CAAC,CAAA;AAC3D,YAAA,IAAIA,WAAS,CAAC,IAAI,KAAKM,gCAAmB,CAAC,IAAI;gBAC7C,OAAO,IAAI,CAAC,oBAAoB,CAAC,MAAM,EAAEN,WAAS,CAAC,MAAM,CAAC,CAAA;AAE5D,YAAA,MAAM,CAAC,MAAM,IAAIA,WAAS,CAAC,MAAM,CAAA;AAEjC,YAAA,OAAO,CAAC,IAAI,CAACA,WAAS,CAAC,CAAA;SACxB,CAAA,CAAA;AAAA,KAAA;IAEa,aAAa,CAAC,MAAc,EAAE,MAAc,EAAA;;YACxD,MAAM,KAAK,GAAGE,yBAAY,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;AAE/C,YAAA,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAA;AAElB,YAAA,MAAM,OAAO,GAAG,KAAK,CAAC,cAAc,CAAA;YAEpC,IAAI,OAAO,KAAK,MAAM;AACpB,gBAAA,MAAM,IAAI,KAAK,CAAC,eAAe,OAAO,CAAA,QAAA,CAAU,CAAC,CAAA;YAEnD,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,KAAK,CAAC,YAAY,CAAC,CAAA;YAEpE,IAAI,MAAM,KAAK,SAAS;gBACtB,MAAM,IAAI,KAAK,CAAC,CAAA,YAAA,EAAe,KAAK,CAAC,YAAY,CAAe,aAAA,CAAA,CAAC,CAAA;AAEnE,YAAA,IAAI,CAAC,KAAK,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,MAAM,EAAE,CAAA;SACnD,CAAA,CAAA;AAAA,KAAA;IAEa,aAAa,CAAC,MAAc,EAAE,MAAc,EAAA;;YACxD,MAAM,KAAK,GAAGC,yBAAY,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;AAE/C,YAAA,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAA;SACnB,CAAA,CAAA;AAAA,KAAA;IAEa,mBAAmB,CAAC,MAAc,EAAE,MAAc,EAAA;;AAC9D,YAAA,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,UAAU;AAChC,gBAAA,MAAM,IAAI,KAAK,CAAC,CAAA,qCAAA,CAAuC,CAAC,CAAA;AAE1D,YAAA,MAAM,KAAK,GAAG,CAAC,MAAK;AAClB,gBAAA,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS;AAC7B,oBAAA,OAAOI,wCAA2B,CAAA;AACpC,gBAAA,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS;AAC7B,oBAAA,OAAOC,wCAA2B,CAAA;AACpC,gBAAA,OAAOH,+BAAkB,CAAA;aAC1B,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;AAEzB,YAAA,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAA;SACnB,CAAA,CAAA;AAAA,KAAA;IAEa,oBAAoB,CAAC,MAAc,EAAE,MAAc,EAAA;;YAC/D,MAAM,KAAK,GAAGC,gCAAmB,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;AAEtD,YAAA,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAA;SACnB,CAAA,CAAA;AAAA,KAAA;IAEa,iBAAiB,CAAC,MAAc,EAAE,MAAc,EAAA;;YAC5D,MAAM,KAAK,GAAGF,6BAAgB,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;AAEnD,YAAA,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAA;SACnB,CAAA,CAAA;AAAA,KAAA;AACF;;;;"}